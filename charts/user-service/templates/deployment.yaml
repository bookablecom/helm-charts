apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}
      imagePullSecrets:
        - name: dockerconfigjson-github-com
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /actuator/health/liveness
          #    port: 8080
          #  initialDelaySeconds: 3
          #  periodSeconds: 3
          #readinessProbe:
          #  httpGet:
          #    path: /actuator/health/readiness
          #    port: 8080
          #  initialDelaySeconds: 3
          #  periodSeconds: 3
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-service-db-secret
                  key: DB_USERNAME

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-service-db-secret
                  key: DB_PASSWORD

            - name: DB_NAME
              value: usersvc

            - name: DB_HOST
              value: postgres-service.default.svc.cluster.local

            - name: RABBIT_HOST
              value: rabbitmq.default.svc.cluster.local

            - name: RABBIT_PORT
              value: "5672"